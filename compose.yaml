services:
  db:
    image: 'postgres:17.5'
    container_name: db
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=postgres
    restart: always
    ports:
      - '5432:5432'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - './dbscript:/docker-entrypoint-initdb.d'
      - 'pgdata:/var/lib/postgresql/data'
    networks:
      - eureka-network
  eurekaServer:
    image: 'bhanupdas/eureka_server:latest'
    container_name: eurekaServer
    ports:
      - '8761:8761'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - eureka-network
  loki:
    image: grafana/loki
    ports:
      - '3100:3100'
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:3100/ready"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - eureka-network
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - '9090:9090'
    restart: always
    volumes:
      - './prometheus.yml:/etc/prometheus/prometheus.yml:ro'
    networks:
      - eureka-network
  grafana:
    image: 'grafana/grafana-enterprise:latest'
    container_name: grafana
    ports:
      - '3000:3000'
    restart: always
    volumes:
      - './grafana/provisioning/datasources:/etc/grafana/provisioning/datasources'
      - './grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards'
      - './grafana/dashboards:/var/lib/grafana/dashboards'
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      loki:
        condition: service_healthy        
    networks:
      - eureka-network
  usermgmt:
    image: 'bhanupdas/user-management-service:latest'
    container_name: usermgmt
    command: npm run start:dev auth
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USERNAME=admin
      - DB_PASSWORD=password
      - DB_SCHEMA=user_mgmt
      - DB_NAME=postgres
      - JWT_SECRET=JWT_SECRET
      - JWT_EXPIRATION=900
      - HTTP_PORT=4000
      - TCP_PORT=8001
      - SERVICE_NAME=usermgmt
      - SERVICE_PORT=4000
      - SERVICE_HOST=usermgmt
      - EUREKA_SERVER_HOST=eurekaServer
      - EUREKA_SERVER_PORT=8761
      - 'LOKI_URL=http://loki:3100/'
    ports:
      - '4000:4000'
    restart: always
    networks:
      - eureka-network
    depends_on:
      db:
        condition: service_healthy
      eurekaServer:
        condition: service_healthy
      loki:
        condition: service_healthy
    volumes:
      - './user-management:/usr/src/app'
      - '/usr/src/app/node_modules'
  emservice:
    image: 'bhanupdas/energy-management-service:latest'
    container_name: emservice
    environment:
      - 'spring.datasource.url=jdbc:postgresql://db:5432/postgres'
      - spring.datasource.username=admin
      - spring.datasource.password=password
      - spring.datasource.driver-class-name=org.postgresql.Driver
      - 'eureka.client.serviceUrl.defaultZone=http://eurekaServer:8761/eureka/'
      - 'loki.url=http://loki:3100/loki/api/v1/push'
    ports:
      - '8530:8530'
    restart: always
    networks:
      - eureka-network
    depends_on:
      db:
        condition: service_healthy
      eurekaServer:
        condition: service_healthy
      loki:
        condition: service_healthy
  eoservice:
    image: 'bhanupdas/energy-optimization-service:latest'
    container_name: eoservice
    environment:
      - 'spring.datasource.url=jdbc:postgresql://db:5432/postgres'
      - spring.datasource.username=admin
      - spring.datasource.password=password
      - spring.datasource.driver-class-name=org.postgresql.Driver
      - 'eureka.client.serviceUrl.defaultZone=http://eurekaServer:8761/eureka/'
      - 'loki.url=http://loki:3100/loki/api/v1/push'
    ports:
      - '8510:8510'
    restart: always
    networks:
      - eureka-network
    depends_on:
      db:
        condition: service_healthy
      eurekaServer:
        condition: service_healthy
      loki:
        condition: service_healthy
  easervice:
    image: 'bhanupdas/energy_analytics_service:latest'
    container_name: easervice
    environment:
      - 'spring.datasource.url=jdbc:postgresql://db:5432/postgres'
      - spring.datasource.username=admin
      - spring.datasource.password=password
      - spring.datasource.driver-class-name=org.postgresql.Driver
      - 'eureka.client.serviceUrl.defaultZone=http://eurekaServer:8761/eureka/'
      - 'loki.url=http://loki:3100/loki/api/v1/push'
    ports:
      - '8520:8520'
    restart: always
    networks:
      - eureka-network
    depends_on:
      db:
        condition: service_healthy
      eurekaServer:
        condition: service_healthy
      loki:
        condition: service_healthy
  cmservice:
    image: 'bhanupdas/city-management-service:latest'
    container_name: cmservice
    environment:
      - 'spring.datasource.url=jdbc:postgresql://db:5432/postgres'
      - spring.datasource.username=admin
      - spring.datasource.password=password
      - spring.datasource.driver-class-name=org.postgresql.Driver
      - 'eureka.client.serviceUrl.defaultZone=http://eurekaServer:8761/eureka/'
      - 'loki.url=http://loki:3100/loki/api/v1/push'
      - 'user_mgmt.url=http://USERMGMT'
      - 'energy_mgmt.url=http://ENERGYMANAGEMENTSERVICE'
      - 'energy_opt.url=http://ENERGY-OPT-SERVICE'
      - 'energy_analytics.url=http://ENERGY-ANALYTICS-SERVICE'
    ports:
      - '8500:8500'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8500/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always
    networks:
      - eureka-network
    depends_on:
      db:
        condition: service_healthy
      eurekaServer:
        condition: service_healthy
      loki:
        condition: service_healthy
networks:
  eureka-network:
    driver: bridge
volumes:
  pgdata: null
